import express from 'express';
import cors from 'cors';
import dotenv from 'dotenv';
import { semanticSearchFull } from './rag.js';

dotenv.config();

const app = express();
const port = process.env.PORT || 5005;

app.use(cors());
app.use(express.json());

// GET /ask ‚Äì anv√§nds f√∂r test i webbl√§sare
app.get('/ask', async (req, res) => {
  const query = req.query.query;

  if (!query) {
    return res.status(400).json({ error: '‚ùå Fr√•ga saknas i query-parametern.' });
  }

  try {
    const docs = await semanticSearchFull(query, 5);
    const answer = docs.join('\n\n');
    res.json({ answer, query });
  } catch (error) {
    console.error('‚ùå Fel i /ask:', error.message);
    res.status(500).json({ error: '‚ùå Internt serverfel. F√∂rs√∂k igen senare.' });
  }
});

// üîß NY: POST /rag ‚Äì anv√§nds av frontend
app.post('/rag', async (req, res) => {
  const { query } = req.body;

  if (!query) {
    return res.status(400).json({ error: '‚ùå Fr√•ga saknas i POST-body.' });
  }

  try {
    const docs = await semanticSearchFull(query, 5);
    const answer = docs.join('\n\n');
    res.json({ answer, query });
  } catch (error) {
    console.error('‚ùå Fel i /rag:', error.message);
    res.status(500).json({ error: '‚ùå Internt serverfel. F√∂rs√∂k igen senare.' });
  }
});

app.listen(port, () => {
  console.log(`‚úÖ RAG-backend k√∂rs p√• http://localhost:${port}`);
});
